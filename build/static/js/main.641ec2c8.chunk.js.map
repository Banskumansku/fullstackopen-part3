{"version":3,"sources":["components/Person.js","services/PersonService.js","components/Notification.js","App.js","index.js"],"names":["Person","person","removeContact","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","notificationMessage","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filteredPersons","setFilteredPersons","setNotificationMessage","useEffect","personService","onChange","event","target","value","filter","includes","onSubmit","personObject","preventDefault","some","window","confirm","updatedPerson","find","p","returnedPerson","map","setTimeout","catch","e","error","concat","type","i","key","deletePerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.641ec2c8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, removeContact }) => {\r\n    return (\r\n        <div>\r\n            <li>{person.name}: {person.number} <span><button onClick={removeContact}>Remove</button></span> </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove}","import React from 'react'\r\n\r\nconst Notification = ({ notificationMessage }) => {\r\n  if (notificationMessage === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification\">\r\n      {notificationMessage}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport personService from './services/PersonService'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([{ name: '', number: '' }])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filteredPersons, setFilteredPersons] = useState([{ name: '', number: '' }])\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n        setFilteredPersons(response)\n      })\n  }, [])\n\n\n  const addContact = (event) => {\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    event.preventDefault();\n    if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, do you want to update number?`)) {\n        const updatedPerson = persons.find(p => p.name === newName)\n        personService.update(updatedPerson.id, personObject).then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== updatedPerson.id ? person : returnedPerson))\n          setFilteredPersons(persons.map(person => person.id !== updatedPerson.id ? person : returnedPerson))\n          setNotificationMessage(\n            `Contact '${personObject.name}' was updated to server`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        }).catch(e => {\n          setNotificationMessage(e.response.data.error)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setFilteredPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotificationMessage(\n            `Contact '${personObject.name}' was added to server`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        }).catch(e => {\n          setNotificationMessage(e.response.data.error)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const removeContact = (deletePerson) => {\n    if (window.confirm(`Do you really want to delete ${deletePerson.name}?`)) {\n      personService.remove(deletePerson.id).then(value => {\n        setPersons(persons.filter(person => person !== deletePerson))\n        setFilteredPersons(filteredPersons.filter(person => person !== deletePerson))\n        setNotificationMessage(\n          `Contact '${deletePerson.name}' was deleted from the server`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const updatePersons = (event) => setFilteredPersons(event.target.value === '' ? persons : persons.filter(person => person.name.includes(event.target.value)));\n\n  return (\n    <div>\n      <div>\n        <p>Filter</p>\n        <input\n          onChange={updatePersons} />\n      </div>\n      <h2>Phonebook</h2>\n      <Notification notificationMessage={notificationMessage} />\n      <form onSubmit={addContact}>\n        <div>\n          <input value={newName}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          <input value={newNumber}\n            onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Contacts</h2>\n      <ul>\n        {filteredPersons.map((person, i) =>\n          <Person key={i}\n            person={person}\n            removeContact={() => removeContact(person)} />\n        )}\n      </ul>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}